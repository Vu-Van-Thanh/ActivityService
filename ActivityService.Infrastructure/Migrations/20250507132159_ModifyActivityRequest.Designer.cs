// <auto-generated />
using System;
using ActivityService.Infrastructure.AppDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ActivityService.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250507132159_ModifyActivityRequest")]
    partial class ModifyActivityRequest
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ActivityService.Core.Domain.Entities.Activity", b =>
                {
                    b.Property<Guid>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActivityDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActivityId");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            ActivityId = new Guid("8b74e7d6-c7ac-4286-8510-dd8a20aa5656"),
                            ActivityDescription = "Nghỉ phép cá nhân",
                            ActivityType = "Leave"
                        },
                        new
                        {
                            ActivityId = new Guid("31f31dc7-4656-4819-b375-bae80ad5e5a6"),
                            ActivityDescription = "Làm việc từ xa",
                            ActivityType = "Remote"
                        },
                        new
                        {
                            ActivityId = new Guid("89f25521-255d-4e1d-be1f-df31ec947f20"),
                            ActivityDescription = "Book phòng họp",
                            ActivityType = "Meeting"
                        },
                        new
                        {
                            ActivityId = new Guid("b4613af0-af0a-4884-83a5-a56de96a2fbf"),
                            ActivityDescription = "Chấm công",
                            ActivityType = "Attendance"
                        });
                });

            modelBuilder.Entity("ActivityService.Core.Domain.Entities.ActivityFld", b =>
                {
                    b.Property<Guid>("FieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FieldId");

                    b.HasIndex("ActivityId");

                    b.ToTable("ActivityFlds");

                    b.HasData(
                        new
                        {
                            FieldId = new Guid("4f4a1b2a-6573-4f10-b80d-63b288a865ef"),
                            ActivityId = new Guid("8b74e7d6-c7ac-4286-8510-dd8a20aa5656"),
                            FieldName = "Lý do",
                            FieldType = "String"
                        },
                        new
                        {
                            FieldId = new Guid("bfcc713c-fa7f-4794-a11c-2548506504c2"),
                            ActivityId = new Guid("8b74e7d6-c7ac-4286-8510-dd8a20aa5656"),
                            FieldName = "Ngày nghỉ",
                            FieldType = "Datetime"
                        },
                        new
                        {
                            FieldId = new Guid("a397a21f-a317-4573-b7c5-aa80c54cf005"),
                            ActivityId = new Guid("31f31dc7-4656-4819-b375-bae80ad5e5a6"),
                            FieldName = "Lý do",
                            FieldType = "String"
                        });
                });

            modelBuilder.Entity("ActivityService.Core.Domain.Entities.ActivityRequest", b =>
                {
                    b.Property<Guid>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestFlds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RequestId");

                    b.HasIndex("ActivityId");

                    b.ToTable("ActivityRequests");

                    b.HasData(
                        new
                        {
                            RequestId = new Guid("b4359239-956b-403c-b118-b4d6dd7a0f68"),
                            ActivityId = new Guid("31f31dc7-4656-4819-b375-bae80ad5e5a6"),
                            CreatedAt = new DateTime(2025, 4, 8, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = new Guid("63e29a28-bc90-4cd1-8f9e-ab9834bdde6c"),
                            EndTime = new DateTime(2025, 4, 8, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            RequestFlds = "{\"TaskName\":\"Implement JWT\",\"EstimatedHours\":8}",
                            StartTime = new DateTime(2025, 4, 8, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Pending"
                        },
                        new
                        {
                            RequestId = new Guid("6d6609f9-00db-4024-bb44-dde901d6dd2a"),
                            ActivityId = new Guid("89f25521-255d-4e1d-be1f-df31ec947f20"),
                            CreatedAt = new DateTime(2025, 4, 8, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = new Guid("d05780d4-5742-40ca-8403-0febd44b1555"),
                            EndTime = new DateTime(2025, 4, 8, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            RequestFlds = "{\"MeetingRoom\":\"Room 402\"}",
                            StartTime = new DateTime(2025, 4, 8, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Approved"
                        });
                });

            modelBuilder.Entity("ActivityService.Core.Domain.Entities.Attendance", b =>
                {
                    b.Property<Guid>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Endtime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Starttime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttendanceId");

                    b.ToTable("Attendances");

                    b.HasData(
                        new
                        {
                            AttendanceId = new Guid("21ca0654-8f04-4684-856d-b2159aadd423"),
                            ActivityId = new Guid("b4613af0-af0a-4884-83a5-a56de96a2fbf"),
                            AttendanceDate = new DateTime(2025, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Worked on authentication module",
                            EmployeeId = new Guid("63e29a28-bc90-4cd1-8f9e-ab9834bdde6c"),
                            Endtime = new DateTime(2025, 4, 8, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "Backend Developer",
                            ProjectId = new Guid("550e8400-e29b-41d4-a716-446655440000"),
                            Starttime = new DateTime(2025, 4, 8, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Present"
                        },
                        new
                        {
                            AttendanceId = new Guid("68ed2ae8-56f0-49fd-98e6-b77934485bff"),
                            ActivityId = new Guid("b4613af0-af0a-4884-83a5-a56de96a2fbf"),
                            AttendanceDate = new DateTime(2025, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Attended team meeting",
                            EmployeeId = new Guid("d05780d4-5742-40ca-8403-0febd44b1555"),
                            Endtime = new DateTime(2025, 4, 8, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "Scrum Master",
                            ProjectId = new Guid("550e8400-e29b-41d4-a716-446655440000"),
                            Starttime = new DateTime(2025, 4, 8, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Half-day"
                        });
                });

            modelBuilder.Entity("ActivityService.Core.Domain.Entities.ActivityFld", b =>
                {
                    b.HasOne("ActivityService.Core.Domain.Entities.Activity", "Activity")
                        .WithMany("ActivityFlds")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("ActivityService.Core.Domain.Entities.ActivityRequest", b =>
                {
                    b.HasOne("ActivityService.Core.Domain.Entities.Activity", "Activity")
                        .WithMany("ActivityRequests")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("ActivityService.Core.Domain.Entities.Activity", b =>
                {
                    b.Navigation("ActivityFlds");

                    b.Navigation("ActivityRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
